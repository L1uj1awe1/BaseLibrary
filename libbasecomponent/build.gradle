if (isBuildLibraryComponent) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
    apply plugin: 'com.novoda.bintray-release'
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {

    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    resourcePrefix "comp_"

    sourceSets {
        main {
            if (isBuildLibraryComponent) {
                manifest.srcFile 'src/main/manifest/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/manifest/release/AndroidManifest.xml'
            }
        }
    }

    lintOptions {
        abortOnError false
    }

    if (!isBuildLibraryComponent) {

        //生成源文件
        task sourcesJar(type: Jar) {
            from android.sourceSets.main.java.srcDirs
            classifier = 'sources'
        }

        //生成Javadoc文档
        task javadoc(type: Javadoc) {
            source = android.sourceSets.main.java.srcDirs
            classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        }

        //文档打包成jar
        task javadocJar(type: Jar, dependsOn: javadoc) {
            classifier = 'javadoc'
            from javadoc.destinationDir
        }

        //拷贝javadoc文件
        task copyDoc(type: Copy) {
            from "${buildDir}/docs/"
            into "docs"
        }

        //上传到JCenter所需要的源码文件
        artifacts {
            archives javadocJar
            archives sourcesJar
        }

        //解决 JavaDoc 中文注释生成失败的问题
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
            options.addStringOption('encoding', 'UTF-8')
            options.addStringOption('charSet', 'UTF-8')

            excludes = ['**/*.kt']
        }

//        tasks.withType(Javadoc).all {
//            enabled = false
//        }

        //发布到 Bintray
        publish {
            userOrg = 'f1ght1n9code' //organization id 企业名称或ID
            groupId = 'com.readboy.baselibrary' //以后访问 jcenter上此项目的路径，一般和库项目的包名一致
            artifactId = 'component' //bintray.com 创建的 Package 名
            publishVersion = '1.0.2' //版本号
            desc = '更新pre_fix_Boy' //版本说明，随意
            website = 'https://github.com/L1uj1awe1/BaseLibrary.git' //关于这个开源项目的网站，随意
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    api 'com.github.tbruyelle:rxpermissions:0.10.2' // 权限管理 https://github.com/tbruyelle/RxPermissions
    api 'com.orhanobut:logger:2.2.0' // 日志库 https://github.com/orhanobut/logger
    api 'com.blankj:utilcode:1.22.5' // 工具库 https://github.com/Blankj/AndroidUtilCode
}
